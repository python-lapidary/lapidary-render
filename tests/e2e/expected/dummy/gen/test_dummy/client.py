# This file is automatically @generated by Lapidary and should not be changed by hand.


__all__ = [
    'ApiClient',
]

import typing

from typing_extensions import Self
from typing import Annotated, Union
from lapidary.runtime import *


import test_dummy.components.schemas.all.schema
import test_dummy.components.schemas.schema1.schema
import test_dummy.paths.u_00007e01testu_00007e01.get.parameters.u_000031.schema.schema


class ApiClient(ClientBase):
    def __init__(
        self,
        *,
        base_url: str,
        **kwargs,
    ):
        super().__init__(
            base_url=base_url,
            security=[{'oauth-refresh': ['read', 'write']}, {'oauth': ['read', 'write']}, {'api-key': []}, {'api-key-cookie': []}, {'api-key-query': []}, {'http_basic': []}, {'http_digest': []}],
            **kwargs,
        )

    async def __aenter__(self) -> 'ApiClient':
        await super().__aenter__()
        return self

    async def __aexit__(self, __exc_type=None, __exc_value=None, __traceback=None) -> None:
        await super().__aexit__(__exc_type, __exc_value, __traceback)

    @get('/test/')
    async def test_op(
        self: Self,
        *,
        param1_q: Annotated[test_dummy.components.schemas.schema1.schema.schema1, Query('param1', )],
        param2_q: Annotated[test_dummy.paths.u_00007e01testu_00007e01.get.parameters.u_000031.schema.schema.schema, Query('param2', )],
    ) -> Annotated[
        test_dummy.components.schemas.all.schema.all,
        Responses({
            'default': {
                'application/json': test_dummy.components.schemas.all.schema.all,
            },
        })
    ]:
        pass
